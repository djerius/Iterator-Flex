# PODNAME: Iterator::Flex::Manual::PriorArt
# ABSTRACT: Other Iterator Models

=head1 DESCRIPTION

Iterators are not new.

=head2 Other Languages

These languages provide official iterator facilities, namely classes
whose objects retrieve data from a source (similar to this package).
There's a range in how they signal exhaustion:

=over

=item *

Python, throws an exception C<StopIteration>;

=item *

Raku returns a special sentinal value C<IterationEnd>;

=item *

JavaScript returns an object with C<value> and C<done> properties, with C<done> false;

=item * 

Ruby (via the Enumerator class) raises the C<StopIteration> exception;

=item * 

Java throws a C<NoSuchElementException> exception.

=back

=head2 C++

L<C++|https://en.cppreference.com/w/cpp/iterator> arguably has the
most complicated model of iterators, as they can insert as well
as retrieve.  They're also a very different model from other
languages, so not comparable.

=head2 Perl

And Perl... Well, Perl doesn't provide an official iterator, so Perl
can signal exhaustion any way it wants. This is great unless you need to use
an iterator which doesn't fit your exhaustion model.  In any case,
see L<Iterator::Flex::Manual::Alien>.


